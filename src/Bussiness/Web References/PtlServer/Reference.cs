//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Bussiness.PtlServer {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IPtlServer", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityBaseOfInt32))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarshalByRefObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataResultOfObject))]
    public partial class PtlServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetLightColorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLightColorByColorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckXgateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LightManyIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback LightOneM3OperationCompleted;
        
        private System.Threading.SendOrPostCallback LightOneIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartByStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartByPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckConfigFileImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllDeviceAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisPlay900uOperationCompleted;
        
        private System.Threading.SendOrPostCallback Clear900uOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisplayMany900uOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishOneLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopAreaOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContinueAreaOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PtlServer() {
            this.Url = global::Bussiness.Properties.Settings.Default.Bussiness_PtlServer_PtlServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetLightColorCompletedEventHandler SetLightColorCompleted;
        
        /// <remarks/>
        public event SetLightColorByColorCompletedEventHandler SetLightColorByColorCompleted;
        
        /// <remarks/>
        public event CheckXgateCompletedEventHandler CheckXgateCompleted;
        
        /// <remarks/>
        public event LightManyIndexCompletedEventHandler LightManyIndexCompleted;
        
        /// <remarks/>
        public event LightOneM3CompletedEventHandler LightOneM3Completed;
        
        /// <remarks/>
        public event LightOneIndexCompletedEventHandler LightOneIndexCompleted;
        
        /// <remarks/>
        public event StopCompletedEventHandler StopCompleted;
        
        /// <remarks/>
        public event StartByStreamCompletedEventHandler StartByStreamCompleted;
        
        /// <remarks/>
        public event StartCompletedEventHandler StartCompleted;
        
        /// <remarks/>
        public event StartByPathCompletedEventHandler StartByPathCompleted;
        
        /// <remarks/>
        public event CheckConfigFileImportCompletedEventHandler CheckConfigFileImportCompleted;
        
        /// <remarks/>
        public event LoadAllDeviceAddressCompletedEventHandler LoadAllDeviceAddressCompleted;
        
        /// <remarks/>
        public event DisPlay900uCompletedEventHandler DisPlay900uCompleted;
        
        /// <remarks/>
        public event Clear900uCompletedEventHandler Clear900uCompleted;
        
        /// <remarks/>
        public event DisplayMany900uCompletedEventHandler DisplayMany900uCompleted;
        
        /// <remarks/>
        public event GetLocationsCompletedEventHandler GetLocationsCompleted;
        
        /// <remarks/>
        public event StartOrderCompletedEventHandler StartOrderCompleted;
        
        /// <remarks/>
        public event FinishOrderCompletedEventHandler FinishOrderCompleted;
        
        /// <remarks/>
        public event FinishOneLocationCompletedEventHandler FinishOneLocationCompleted;
        
        /// <remarks/>
        public event StopAreaOrderCompletedEventHandler StopAreaOrderCompleted;
        
        /// <remarks/>
        public event ContinueAreaOrderCompletedEventHandler ContinueAreaOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/SetLightColor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult SetLightColor() {
            object[] results = this.Invoke("SetLightColor", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void SetLightColorAsync() {
            this.SetLightColorAsync(null);
        }
        
        /// <remarks/>
        public void SetLightColorAsync(object userState) {
            if ((this.SetLightColorOperationCompleted == null)) {
                this.SetLightColorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLightColorOperationCompleted);
            }
            this.InvokeAsync("SetLightColor", new object[0], this.SetLightColorOperationCompleted, userState);
        }
        
        private void OnSetLightColorOperationCompleted(object arg) {
            if ((this.SetLightColorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLightColorCompleted(this, new SetLightColorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/SetLightColorByColor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult SetLightColorByColor(Color cor) {
            object[] results = this.Invoke("SetLightColorByColor", new object[] {
                        cor});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void SetLightColorByColorAsync(Color cor) {
            this.SetLightColorByColorAsync(cor, null);
        }
        
        /// <remarks/>
        public void SetLightColorByColorAsync(Color cor, object userState) {
            if ((this.SetLightColorByColorOperationCompleted == null)) {
                this.SetLightColorByColorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLightColorByColorOperationCompleted);
            }
            this.InvokeAsync("SetLightColorByColor", new object[] {
                        cor}, this.SetLightColorByColorOperationCompleted, userState);
        }
        
        private void OnSetLightColorByColorOperationCompleted(object arg) {
            if ((this.SetLightColorByColorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLightColorByColorCompleted(this, new SetLightColorByColorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/CheckXgate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult CheckXgate(string xgateIp, int busIndex) {
            object[] results = this.Invoke("CheckXgate", new object[] {
                        xgateIp,
                        busIndex});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void CheckXgateAsync(string xgateIp, int busIndex) {
            this.CheckXgateAsync(xgateIp, busIndex, null);
        }
        
        /// <remarks/>
        public void CheckXgateAsync(string xgateIp, int busIndex, object userState) {
            if ((this.CheckXgateOperationCompleted == null)) {
                this.CheckXgateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckXgateOperationCompleted);
            }
            this.InvokeAsync("CheckXgate", new object[] {
                        xgateIp,
                        busIndex}, this.CheckXgateOperationCompleted, userState);
        }
        
        private void OnCheckXgateOperationCompleted(object arg) {
            if ((this.CheckXgateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckXgateCompleted(this, new CheckXgateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/LightManyIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult LightManyIndex(int action, string xgateIp, int busIndex, Tear[] Teras, int[] m3Address, int[] m3Index, LightColor color) {
            object[] results = this.Invoke("LightManyIndex", new object[] {
                        action,
                        xgateIp,
                        busIndex,
                        Teras,
                        m3Address,
                        m3Index,
                        color});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void LightManyIndexAsync(int action, string xgateIp, int busIndex, Tear[] Teras, int[] m3Address, int[] m3Index, LightColor color) {
            this.LightManyIndexAsync(action, xgateIp, busIndex, Teras, m3Address, m3Index, color, null);
        }
        
        /// <remarks/>
        public void LightManyIndexAsync(int action, string xgateIp, int busIndex, Tear[] Teras, int[] m3Address, int[] m3Index, LightColor color, object userState) {
            if ((this.LightManyIndexOperationCompleted == null)) {
                this.LightManyIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLightManyIndexOperationCompleted);
            }
            this.InvokeAsync("LightManyIndex", new object[] {
                        action,
                        xgateIp,
                        busIndex,
                        Teras,
                        m3Address,
                        m3Index,
                        color}, this.LightManyIndexOperationCompleted, userState);
        }
        
        private void OnLightManyIndexOperationCompleted(object arg) {
            if ((this.LightManyIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LightManyIndexCompleted(this, new LightManyIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/LightOneM3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult LightOneM3(int action, string xgateIp, int busIndex, int m3Address, int M3Index) {
            object[] results = this.Invoke("LightOneM3", new object[] {
                        action,
                        xgateIp,
                        busIndex,
                        m3Address,
                        M3Index});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void LightOneM3Async(int action, string xgateIp, int busIndex, int m3Address, int M3Index) {
            this.LightOneM3Async(action, xgateIp, busIndex, m3Address, M3Index, null);
        }
        
        /// <remarks/>
        public void LightOneM3Async(int action, string xgateIp, int busIndex, int m3Address, int M3Index, object userState) {
            if ((this.LightOneM3OperationCompleted == null)) {
                this.LightOneM3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLightOneM3OperationCompleted);
            }
            this.InvokeAsync("LightOneM3", new object[] {
                        action,
                        xgateIp,
                        busIndex,
                        m3Address,
                        M3Index}, this.LightOneM3OperationCompleted, userState);
        }
        
        private void OnLightOneM3OperationCompleted(object arg) {
            if ((this.LightOneM3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LightOneM3Completed(this, new LightOneM3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/LightOneIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult LightOneIndex(int action, string xgateIp, int busIndex, int deviceAddress, int index, int m3Address, int m3Index, LightColor color, bool relateWithM3) {
            object[] results = this.Invoke("LightOneIndex", new object[] {
                        action,
                        xgateIp,
                        busIndex,
                        deviceAddress,
                        index,
                        m3Address,
                        m3Index,
                        color,
                        relateWithM3});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void LightOneIndexAsync(int action, string xgateIp, int busIndex, int deviceAddress, int index, int m3Address, int m3Index, LightColor color, bool relateWithM3) {
            this.LightOneIndexAsync(action, xgateIp, busIndex, deviceAddress, index, m3Address, m3Index, color, relateWithM3, null);
        }
        
        /// <remarks/>
        public void LightOneIndexAsync(int action, string xgateIp, int busIndex, int deviceAddress, int index, int m3Address, int m3Index, LightColor color, bool relateWithM3, object userState) {
            if ((this.LightOneIndexOperationCompleted == null)) {
                this.LightOneIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLightOneIndexOperationCompleted);
            }
            this.InvokeAsync("LightOneIndex", new object[] {
                        action,
                        xgateIp,
                        busIndex,
                        deviceAddress,
                        index,
                        m3Address,
                        m3Index,
                        color,
                        relateWithM3}, this.LightOneIndexOperationCompleted, userState);
        }
        
        private void OnLightOneIndexOperationCompleted(object arg) {
            if ((this.LightOneIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LightOneIndexCompleted(this, new LightOneIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/Stop", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult Stop() {
            object[] results = this.Invoke("Stop", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StopAsync() {
            this.StopAsync(null);
        }
        
        /// <remarks/>
        public void StopAsync(object userState) {
            if ((this.StopOperationCompleted == null)) {
                this.StopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopOperationCompleted);
            }
            this.InvokeAsync("Stop", new object[0], this.StopOperationCompleted, userState);
        }
        
        private void OnStopOperationCompleted(object arg) {
            if ((this.StopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopCompleted(this, new StopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/StartByStream", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult StartByStream([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileName) {
            object[] results = this.Invoke("StartByStream", new object[] {
                        fileName});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartByStreamAsync(byte[] fileName) {
            this.StartByStreamAsync(fileName, null);
        }
        
        /// <remarks/>
        public void StartByStreamAsync(byte[] fileName, object userState) {
            if ((this.StartByStreamOperationCompleted == null)) {
                this.StartByStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartByStreamOperationCompleted);
            }
            this.InvokeAsync("StartByStream", new object[] {
                        fileName}, this.StartByStreamOperationCompleted, userState);
        }
        
        private void OnStartByStreamOperationCompleted(object arg) {
            if ((this.StartByStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartByStreamCompleted(this, new StartByStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/Start", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult Start(string[] pathArray) {
            object[] results = this.Invoke("Start", new object[] {
                        pathArray});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartAsync(string[] pathArray) {
            this.StartAsync(pathArray, null);
        }
        
        /// <remarks/>
        public void StartAsync(string[] pathArray, object userState) {
            if ((this.StartOperationCompleted == null)) {
                this.StartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartOperationCompleted);
            }
            this.InvokeAsync("Start", new object[] {
                        pathArray}, this.StartOperationCompleted, userState);
        }
        
        private void OnStartOperationCompleted(object arg) {
            if ((this.StartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCompleted(this, new StartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/StartByPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult StartByPath(string fileName) {
            object[] results = this.Invoke("StartByPath", new object[] {
                        fileName});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartByPathAsync(string fileName) {
            this.StartByPathAsync(fileName, null);
        }
        
        /// <remarks/>
        public void StartByPathAsync(string fileName, object userState) {
            if ((this.StartByPathOperationCompleted == null)) {
                this.StartByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartByPathOperationCompleted);
            }
            this.InvokeAsync("StartByPath", new object[] {
                        fileName}, this.StartByPathOperationCompleted, userState);
        }
        
        private void OnStartByPathOperationCompleted(object arg) {
            if ((this.StartByPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartByPathCompleted(this, new StartByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/CheckConfigFileImport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult CheckConfigFileImport() {
            object[] results = this.Invoke("CheckConfigFileImport", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void CheckConfigFileImportAsync() {
            this.CheckConfigFileImportAsync(null);
        }
        
        /// <remarks/>
        public void CheckConfigFileImportAsync(object userState) {
            if ((this.CheckConfigFileImportOperationCompleted == null)) {
                this.CheckConfigFileImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckConfigFileImportOperationCompleted);
            }
            this.InvokeAsync("CheckConfigFileImport", new object[0], this.CheckConfigFileImportOperationCompleted, userState);
        }
        
        private void OnCheckConfigFileImportOperationCompleted(object arg) {
            if ((this.CheckConfigFileImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckConfigFileImportCompleted(this, new CheckConfigFileImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/LoadAllDeviceAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute()]
        public byte[] LoadAllDeviceAddress(string ipAddress, int busIndex) {
            object[] results = this.Invoke("LoadAllDeviceAddress", new object[] {
                        ipAddress,
                        busIndex});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllDeviceAddressAsync(string ipAddress, int busIndex) {
            this.LoadAllDeviceAddressAsync(ipAddress, busIndex, null);
        }
        
        /// <remarks/>
        public void LoadAllDeviceAddressAsync(string ipAddress, int busIndex, object userState) {
            if ((this.LoadAllDeviceAddressOperationCompleted == null)) {
                this.LoadAllDeviceAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllDeviceAddressOperationCompleted);
            }
            this.InvokeAsync("LoadAllDeviceAddress", new object[] {
                        ipAddress,
                        busIndex}, this.LoadAllDeviceAddressOperationCompleted, userState);
        }
        
        private void OnLoadAllDeviceAddressOperationCompleted(object arg) {
            if ((this.LoadAllDeviceAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllDeviceAddressCompleted(this, new LoadAllDeviceAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/DisPlay900u", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult DisPlay900u(string xgateIp, byte busIndex, byte deviceAddress, byte m3Address, int m3Index, Display900UItem display900UItem, LightColor color, bool relateWithM3) {
            object[] results = this.Invoke("DisPlay900u", new object[] {
                        xgateIp,
                        busIndex,
                        deviceAddress,
                        m3Address,
                        m3Index,
                        display900UItem,
                        color,
                        relateWithM3});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void DisPlay900uAsync(string xgateIp, byte busIndex, byte deviceAddress, byte m3Address, int m3Index, Display900UItem display900UItem, LightColor color, bool relateWithM3) {
            this.DisPlay900uAsync(xgateIp, busIndex, deviceAddress, m3Address, m3Index, display900UItem, color, relateWithM3, null);
        }
        
        /// <remarks/>
        public void DisPlay900uAsync(string xgateIp, byte busIndex, byte deviceAddress, byte m3Address, int m3Index, Display900UItem display900UItem, LightColor color, bool relateWithM3, object userState) {
            if ((this.DisPlay900uOperationCompleted == null)) {
                this.DisPlay900uOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisPlay900uOperationCompleted);
            }
            this.InvokeAsync("DisPlay900u", new object[] {
                        xgateIp,
                        busIndex,
                        deviceAddress,
                        m3Address,
                        m3Index,
                        display900UItem,
                        color,
                        relateWithM3}, this.DisPlay900uOperationCompleted, userState);
        }
        
        private void OnDisPlay900uOperationCompleted(object arg) {
            if ((this.DisPlay900uCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisPlay900uCompleted(this, new DisPlay900uCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/Clear900u", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult Clear900u(string xgateIp, byte busIndex, byte deviceAddress, byte m3Address, int m3Index, bool relateWithM3, bool IsByOrder) {
            object[] results = this.Invoke("Clear900u", new object[] {
                        xgateIp,
                        busIndex,
                        deviceAddress,
                        m3Address,
                        m3Index,
                        relateWithM3,
                        IsByOrder});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void Clear900uAsync(string xgateIp, byte busIndex, byte deviceAddress, byte m3Address, int m3Index, bool relateWithM3, bool IsByOrder) {
            this.Clear900uAsync(xgateIp, busIndex, deviceAddress, m3Address, m3Index, relateWithM3, IsByOrder, null);
        }
        
        /// <remarks/>
        public void Clear900uAsync(string xgateIp, byte busIndex, byte deviceAddress, byte m3Address, int m3Index, bool relateWithM3, bool IsByOrder, object userState) {
            if ((this.Clear900uOperationCompleted == null)) {
                this.Clear900uOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClear900uOperationCompleted);
            }
            this.InvokeAsync("Clear900u", new object[] {
                        xgateIp,
                        busIndex,
                        deviceAddress,
                        m3Address,
                        m3Index,
                        relateWithM3,
                        IsByOrder}, this.Clear900uOperationCompleted, userState);
        }
        
        private void OnClear900uOperationCompleted(object arg) {
            if ((this.Clear900uCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Clear900uCompleted(this, new Clear900uCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/DisplayMany900u", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult DisplayMany900u(int state, string ip, int busIndex, Tear[] devices, int[] m3AddressArray, int[] m3IndexArray) {
            object[] results = this.Invoke("DisplayMany900u", new object[] {
                        state,
                        ip,
                        busIndex,
                        devices,
                        m3AddressArray,
                        m3IndexArray});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void DisplayMany900uAsync(int state, string ip, int busIndex, Tear[] devices, int[] m3AddressArray, int[] m3IndexArray) {
            this.DisplayMany900uAsync(state, ip, busIndex, devices, m3AddressArray, m3IndexArray, null);
        }
        
        /// <remarks/>
        public void DisplayMany900uAsync(int state, string ip, int busIndex, Tear[] devices, int[] m3AddressArray, int[] m3IndexArray, object userState) {
            if ((this.DisplayMany900uOperationCompleted == null)) {
                this.DisplayMany900uOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisplayMany900uOperationCompleted);
            }
            this.InvokeAsync("DisplayMany900u", new object[] {
                        state,
                        ip,
                        busIndex,
                        devices,
                        m3AddressArray,
                        m3IndexArray}, this.DisplayMany900uOperationCompleted, userState);
        }
        
        private void OnDisplayMany900uOperationCompleted(object arg) {
            if ((this.DisplayMany900uCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisplayMany900uCompleted(this, new DisplayMany900uCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/GetLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location[] GetLocations() {
            object[] results = this.Invoke("GetLocations", new object[0]);
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationsAsync() {
            this.GetLocationsAsync(null);
        }
        
        /// <remarks/>
        public void GetLocationsAsync(object userState) {
            if ((this.GetLocationsOperationCompleted == null)) {
                this.GetLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationsOperationCompleted);
            }
            this.InvokeAsync("GetLocations", new object[0], this.GetLocationsOperationCompleted, userState);
        }
        
        private void OnGetLocationsOperationCompleted(object arg) {
            if ((this.GetLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationsCompleted(this, new GetLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/StartOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult StartOrder(string AreaCode, string ProofId) {
            object[] results = this.Invoke("StartOrder", new object[] {
                        AreaCode,
                        ProofId});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartOrderAsync(string AreaCode, string ProofId) {
            this.StartOrderAsync(AreaCode, ProofId, null);
        }
        
        /// <remarks/>
        public void StartOrderAsync(string AreaCode, string ProofId, object userState) {
            if ((this.StartOrderOperationCompleted == null)) {
                this.StartOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartOrderOperationCompleted);
            }
            this.InvokeAsync("StartOrder", new object[] {
                        AreaCode,
                        ProofId}, this.StartOrderOperationCompleted, userState);
        }
        
        private void OnStartOrderOperationCompleted(object arg) {
            if ((this.StartOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartOrderCompleted(this, new StartOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/FinishOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult FinishOrder(string AreaCode, string ProofId) {
            object[] results = this.Invoke("FinishOrder", new object[] {
                        AreaCode,
                        ProofId});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void FinishOrderAsync(string AreaCode, string ProofId) {
            this.FinishOrderAsync(AreaCode, ProofId, null);
        }
        
        /// <remarks/>
        public void FinishOrderAsync(string AreaCode, string ProofId, object userState) {
            if ((this.FinishOrderOperationCompleted == null)) {
                this.FinishOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishOrderOperationCompleted);
            }
            this.InvokeAsync("FinishOrder", new object[] {
                        AreaCode,
                        ProofId}, this.FinishOrderOperationCompleted, userState);
        }
        
        private void OnFinishOrderOperationCompleted(object arg) {
            if ((this.FinishOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishOrderCompleted(this, new FinishOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/FinishOneLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult FinishOneLocation(string AreaCode, string OperatorId, int RealPickValue, bool IsNeedOffLight, string OperatorCode) {
            object[] results = this.Invoke("FinishOneLocation", new object[] {
                        AreaCode,
                        OperatorId,
                        RealPickValue,
                        IsNeedOffLight,
                        OperatorCode});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void FinishOneLocationAsync(string AreaCode, string OperatorId, int RealPickValue, bool IsNeedOffLight, string OperatorCode) {
            this.FinishOneLocationAsync(AreaCode, OperatorId, RealPickValue, IsNeedOffLight, OperatorCode, null);
        }
        
        /// <remarks/>
        public void FinishOneLocationAsync(string AreaCode, string OperatorId, int RealPickValue, bool IsNeedOffLight, string OperatorCode, object userState) {
            if ((this.FinishOneLocationOperationCompleted == null)) {
                this.FinishOneLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishOneLocationOperationCompleted);
            }
            this.InvokeAsync("FinishOneLocation", new object[] {
                        AreaCode,
                        OperatorId,
                        RealPickValue,
                        IsNeedOffLight,
                        OperatorCode}, this.FinishOneLocationOperationCompleted, userState);
        }
        
        private void OnFinishOneLocationOperationCompleted(object arg) {
            if ((this.FinishOneLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishOneLocationCompleted(this, new FinishOneLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/StopAreaOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult StopAreaOrder(string AreaCode, string ProofId) {
            object[] results = this.Invoke("StopAreaOrder", new object[] {
                        AreaCode,
                        ProofId});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StopAreaOrderAsync(string AreaCode, string ProofId) {
            this.StopAreaOrderAsync(AreaCode, ProofId, null);
        }
        
        /// <remarks/>
        public void StopAreaOrderAsync(string AreaCode, string ProofId, object userState) {
            if ((this.StopAreaOrderOperationCompleted == null)) {
                this.StopAreaOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopAreaOrderOperationCompleted);
            }
            this.InvokeAsync("StopAreaOrder", new object[] {
                        AreaCode,
                        ProofId}, this.StopAreaOrderOperationCompleted, userState);
        }
        
        private void OnStopAreaOrderOperationCompleted(object arg) {
            if ((this.StopAreaOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopAreaOrderCompleted(this, new StopAreaOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPtlServer/ContinueAreaOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult ContinueAreaOrder(string AreaCode, string ProofId) {
            object[] results = this.Invoke("ContinueAreaOrder", new object[] {
                        AreaCode,
                        ProofId});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void ContinueAreaOrderAsync(string AreaCode, string ProofId) {
            this.ContinueAreaOrderAsync(AreaCode, ProofId, null);
        }
        
        /// <remarks/>
        public void ContinueAreaOrderAsync(string AreaCode, string ProofId, object userState) {
            if ((this.ContinueAreaOrderOperationCompleted == null)) {
                this.ContinueAreaOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContinueAreaOrderOperationCompleted);
            }
            this.InvokeAsync("ContinueAreaOrder", new object[] {
                        AreaCode,
                        ProofId}, this.ContinueAreaOrderOperationCompleted, userState);
        }
        
        private void OnContinueAreaOrderOperationCompleted(object arg) {
            if ((this.ContinueAreaOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContinueAreaOrderCompleted(this, new ContinueAreaOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DataResult : DataResultOfObject {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DataResultOfObject {
        
        private bool successField;
        
        private string messageField;
        
        private object dataField;
        
        private int resultTypeField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public object Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public int ResultType {
            get {
                return this.resultTypeField;
            }
            set {
                this.resultTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceEntityBaseOfInt32))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Location))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class EntityBaseOfInt32 {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Location))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceEntityBaseOfInt32 : EntityBaseOfInt32 {
        
        private string createdUserCodeField;
        
        private string createdUserNameField;
        
        private System.DateTime createdTimeField;
        
        private string updatedUserCodeField;
        
        private string updatedUserNameField;
        
        private System.Nullable<System.DateTime> updatedTimeField;
        
        /// <remarks/>
        public string CreatedUserCode {
            get {
                return this.createdUserCodeField;
            }
            set {
                this.createdUserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedUserName {
            get {
                return this.createdUserNameField;
            }
            set {
                this.createdUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedTime {
            get {
                return this.createdTimeField;
            }
            set {
                this.createdTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedUserCode {
            get {
                return this.updatedUserCodeField;
            }
            set {
                this.updatedUserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedUserName {
            get {
                return this.updatedUserNameField;
            }
            set {
                this.updatedUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdatedTime {
            get {
                return this.updatedTimeField;
            }
            set {
                this.updatedTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Location : ServiceEntityBaseOfInt32 {
        
        private string codeField;
        
        private string rowField;
        
        private string columnField;
        
        private int depthField;
        
        private int heightField;
        
        private System.Nullable<bool> enabledField;
        
        private System.Nullable<bool> isLockedField;
        
        private string suggestMaterialCodeField;
        
        private string remarkField;
        
        private string wareHouseCodeField;
        
        private string areaCodeField;
        
        private string shelfCodeField;
        
        private string xGateIPField;
        
        private int deviceAddressField;
        
        private string skuSubCodeField;
        
        private System.Nullable<int> deviceTypeField;
        
        private System.Nullable<int> channelIdField;
        
        private int rowCountField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Row {
            get {
                return this.rowField;
            }
            set {
                this.rowField = value;
            }
        }
        
        /// <remarks/>
        public string Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
        /// <remarks/>
        public int Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
        
        /// <remarks/>
        public string SuggestMaterialCode {
            get {
                return this.suggestMaterialCodeField;
            }
            set {
                this.suggestMaterialCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string WareHouseCode {
            get {
                return this.wareHouseCodeField;
            }
            set {
                this.wareHouseCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShelfCode {
            get {
                return this.shelfCodeField;
            }
            set {
                this.shelfCodeField = value;
            }
        }
        
        /// <remarks/>
        public string XGateIP {
            get {
                return this.xGateIPField;
            }
            set {
                this.xGateIPField = value;
            }
        }
        
        /// <remarks/>
        public int DeviceAddress {
            get {
                return this.deviceAddressField;
            }
            set {
                this.deviceAddressField = value;
            }
        }
        
        /// <remarks/>
        public string SkuSubCode {
            get {
                return this.skuSubCodeField;
            }
            set {
                this.skuSubCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DeviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Display900UItem {
        
        private string batchCodeField;
        
        private string nameField;
        
        private string descriptionField;
        
        private Direction directionField;
        
        private string unitField;
        
        private byte subLocationField;
        
        private string subLocationTextField;
        
        private string longSubLocationField;
        
        private ushort countField;
        
        /// <remarks/>
        public string BatchCode {
            get {
                return this.batchCodeField;
            }
            set {
                this.batchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public Direction Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public byte SubLocation {
            get {
                return this.subLocationField;
            }
            set {
                this.subLocationField = value;
            }
        }
        
        /// <remarks/>
        public string SubLocationText {
            get {
                return this.subLocationTextField;
            }
            set {
                this.subLocationTextField = value;
            }
        }
        
        /// <remarks/>
        public string LongSubLocation {
            get {
                return this.longSubLocationField;
            }
            set {
                this.longSubLocationField = value;
            }
        }
        
        /// <remarks/>
        public ushort Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Direction {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Center,
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        TopRight,
        
        /// <remarks/>
        Right,
        
        /// <remarks/>
        BottomRight,
        
        /// <remarks/>
        Bottom,
        
        /// <remarks/>
        BottomLeft,
        
        /// <remarks/>
        Left,
        
        /// <remarks/>
        TopLeft,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Stream))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class MarshalByRefObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class Stream : MarshalByRefObject {
        
        private long positionField;
        
        private int readTimeoutField;
        
        private int writeTimeoutField;
        
        /// <remarks/>
        public long Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public int ReadTimeout {
            get {
                return this.readTimeoutField;
            }
            set {
                this.readTimeoutField = value;
            }
        }
        
        /// <remarks/>
        public int WriteTimeout {
            get {
                return this.writeTimeoutField;
            }
            set {
                this.writeTimeoutField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Tear {
        
        private int idField;
        
        private int[] indexArrayField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int[] indexArray {
            get {
                return this.indexArrayField;
            }
            set {
                this.indexArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Color {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Red,
        
        /// <remarks/>
        Green,
        
        /// <remarks/>
        Blue,
        
        /// <remarks/>
        Yellow,
        
        /// <remarks/>
        Magenta,
        
        /// <remarks/>
        Cyan,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum LightColor {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Red,
        
        /// <remarks/>
        Green,
        
        /// <remarks/>
        Blue,
        
        /// <remarks/>
        Yellow,
        
        /// <remarks/>
        Magenta,
        
        /// <remarks/>
        Cyan,
        
        /// <remarks/>
        White,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SetLightColorCompletedEventHandler(object sender, SetLightColorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLightColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLightColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SetLightColorByColorCompletedEventHandler(object sender, SetLightColorByColorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLightColorByColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLightColorByColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CheckXgateCompletedEventHandler(object sender, CheckXgateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckXgateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckXgateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LightManyIndexCompletedEventHandler(object sender, LightManyIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LightManyIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LightManyIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LightOneM3CompletedEventHandler(object sender, LightOneM3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LightOneM3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LightOneM3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LightOneIndexCompletedEventHandler(object sender, LightOneIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LightOneIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LightOneIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void StopCompletedEventHandler(object sender, StopCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void StartByStreamCompletedEventHandler(object sender, StartByStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartByStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartByStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void StartCompletedEventHandler(object sender, StartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void StartByPathCompletedEventHandler(object sender, StartByPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CheckConfigFileImportCompletedEventHandler(object sender, CheckConfigFileImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckConfigFileImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckConfigFileImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LoadAllDeviceAddressCompletedEventHandler(object sender, LoadAllDeviceAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllDeviceAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllDeviceAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DisPlay900uCompletedEventHandler(object sender, DisPlay900uCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisPlay900uCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisPlay900uCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void Clear900uCompletedEventHandler(object sender, Clear900uCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Clear900uCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Clear900uCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DisplayMany900uCompletedEventHandler(object sender, DisplayMany900uCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisplayMany900uCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisplayMany900uCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLocationsCompletedEventHandler(object sender, GetLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void StartOrderCompletedEventHandler(object sender, StartOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FinishOrderCompletedEventHandler(object sender, FinishOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FinishOneLocationCompletedEventHandler(object sender, FinishOneLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishOneLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishOneLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void StopAreaOrderCompletedEventHandler(object sender, StopAreaOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopAreaOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopAreaOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ContinueAreaOrderCompletedEventHandler(object sender, ContinueAreaOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContinueAreaOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContinueAreaOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591