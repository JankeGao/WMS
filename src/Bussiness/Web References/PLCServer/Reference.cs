//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Bussiness.PLCServer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IPlcServer", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataResultOfObject))]
    public partial class PlcServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StartRunningContainerOperationCompleted;
        
        private System.Threading.SendOrPostCallback HopperSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmergencyDoorSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlcDeivceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlarmInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartRunningC3000ContainerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetC3000DeivceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartRunningHanelContainerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHanelStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishHanellContainerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PlcServer() {
            this.Url = global::Bussiness.Properties.Settings.Default.Bussiness_PLCServer_PlcServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StartRunningContainerCompletedEventHandler StartRunningContainerCompleted;
        
        /// <remarks/>
        public event HopperSettingCompletedEventHandler HopperSettingCompleted;
        
        /// <remarks/>
        public event EmergencyDoorSettingCompletedEventHandler EmergencyDoorSettingCompleted;
        
        /// <remarks/>
        public event GetPlcDeivceStatusCompletedEventHandler GetPlcDeivceStatusCompleted;
        
        /// <remarks/>
        public event GetAlarmInformationCompletedEventHandler GetAlarmInformationCompleted;
        
        /// <remarks/>
        public event ResetAlarmCompletedEventHandler ResetAlarmCompleted;
        
        /// <remarks/>
        public event StartRunningC3000ContainerCompletedEventHandler StartRunningC3000ContainerCompleted;
        
        /// <remarks/>
        public event GetC3000DeivceStatusCompletedEventHandler GetC3000DeivceStatusCompleted;
        
        /// <remarks/>
        public event StartRunningHanelContainerCompletedEventHandler StartRunningHanelContainerCompleted;
        
        /// <remarks/>
        public event GetHanelStatusCompletedEventHandler GetHanelStatusCompleted;
        
        /// <remarks/>
        public event FinishHanellContainerCompletedEventHandler FinishHanellContainerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/StartRunningContainer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult StartRunningContainer(RunningContainer runningContainer) {
            object[] results = this.Invoke("StartRunningContainer", new object[] {
                        runningContainer});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartRunningContainerAsync(RunningContainer runningContainer) {
            this.StartRunningContainerAsync(runningContainer, null);
        }
        
        /// <remarks/>
        public void StartRunningContainerAsync(RunningContainer runningContainer, object userState) {
            if ((this.StartRunningContainerOperationCompleted == null)) {
                this.StartRunningContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRunningContainerOperationCompleted);
            }
            this.InvokeAsync("StartRunningContainer", new object[] {
                        runningContainer}, this.StartRunningContainerOperationCompleted, userState);
        }
        
        private void OnStartRunningContainerOperationCompleted(object arg) {
            if ((this.StartRunningContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRunningContainerCompleted(this, new StartRunningContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/HopperSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult HopperSetting() {
            object[] results = this.Invoke("HopperSetting", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void HopperSettingAsync() {
            this.HopperSettingAsync(null);
        }
        
        /// <remarks/>
        public void HopperSettingAsync(object userState) {
            if ((this.HopperSettingOperationCompleted == null)) {
                this.HopperSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHopperSettingOperationCompleted);
            }
            this.InvokeAsync("HopperSetting", new object[0], this.HopperSettingOperationCompleted, userState);
        }
        
        private void OnHopperSettingOperationCompleted(object arg) {
            if ((this.HopperSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HopperSettingCompleted(this, new HopperSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/EmergencyDoorSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult EmergencyDoorSetting() {
            object[] results = this.Invoke("EmergencyDoorSetting", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void EmergencyDoorSettingAsync() {
            this.EmergencyDoorSettingAsync(null);
        }
        
        /// <remarks/>
        public void EmergencyDoorSettingAsync(object userState) {
            if ((this.EmergencyDoorSettingOperationCompleted == null)) {
                this.EmergencyDoorSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmergencyDoorSettingOperationCompleted);
            }
            this.InvokeAsync("EmergencyDoorSetting", new object[0], this.EmergencyDoorSettingOperationCompleted, userState);
        }
        
        private void OnEmergencyDoorSettingOperationCompleted(object arg) {
            if ((this.EmergencyDoorSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmergencyDoorSettingCompleted(this, new EmergencyDoorSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/GetPlcDeivceStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult GetPlcDeivceStatus() {
            object[] results = this.Invoke("GetPlcDeivceStatus", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlcDeivceStatusAsync() {
            this.GetPlcDeivceStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetPlcDeivceStatusAsync(object userState) {
            if ((this.GetPlcDeivceStatusOperationCompleted == null)) {
                this.GetPlcDeivceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlcDeivceStatusOperationCompleted);
            }
            this.InvokeAsync("GetPlcDeivceStatus", new object[0], this.GetPlcDeivceStatusOperationCompleted, userState);
        }
        
        private void OnGetPlcDeivceStatusOperationCompleted(object arg) {
            if ((this.GetPlcDeivceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlcDeivceStatusCompleted(this, new GetPlcDeivceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/GetAlarmInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult GetAlarmInformation() {
            object[] results = this.Invoke("GetAlarmInformation", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlarmInformationAsync() {
            this.GetAlarmInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetAlarmInformationAsync(object userState) {
            if ((this.GetAlarmInformationOperationCompleted == null)) {
                this.GetAlarmInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlarmInformationOperationCompleted);
            }
            this.InvokeAsync("GetAlarmInformation", new object[0], this.GetAlarmInformationOperationCompleted, userState);
        }
        
        private void OnGetAlarmInformationOperationCompleted(object arg) {
            if ((this.GetAlarmInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlarmInformationCompleted(this, new GetAlarmInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/ResetAlarm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult ResetAlarm() {
            object[] results = this.Invoke("ResetAlarm", new object[0]);
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void ResetAlarmAsync() {
            this.ResetAlarmAsync(null);
        }
        
        /// <remarks/>
        public void ResetAlarmAsync(object userState) {
            if ((this.ResetAlarmOperationCompleted == null)) {
                this.ResetAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetAlarmOperationCompleted);
            }
            this.InvokeAsync("ResetAlarm", new object[0], this.ResetAlarmOperationCompleted, userState);
        }
        
        private void OnResetAlarmOperationCompleted(object arg) {
            if ((this.ResetAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetAlarmCompleted(this, new ResetAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/StartRunningC3000Container", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult StartRunningC3000Container(RunningContainer runningContainer) {
            object[] results = this.Invoke("StartRunningC3000Container", new object[] {
                        runningContainer});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartRunningC3000ContainerAsync(RunningContainer runningContainer) {
            this.StartRunningC3000ContainerAsync(runningContainer, null);
        }
        
        /// <remarks/>
        public void StartRunningC3000ContainerAsync(RunningContainer runningContainer, object userState) {
            if ((this.StartRunningC3000ContainerOperationCompleted == null)) {
                this.StartRunningC3000ContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRunningC3000ContainerOperationCompleted);
            }
            this.InvokeAsync("StartRunningC3000Container", new object[] {
                        runningContainer}, this.StartRunningC3000ContainerOperationCompleted, userState);
        }
        
        private void OnStartRunningC3000ContainerOperationCompleted(object arg) {
            if ((this.StartRunningC3000ContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRunningC3000ContainerCompleted(this, new StartRunningC3000ContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/GetC3000DeivceStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult GetC3000DeivceStatus(RunningContainer runningContainer) {
            object[] results = this.Invoke("GetC3000DeivceStatus", new object[] {
                        runningContainer});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetC3000DeivceStatusAsync(RunningContainer runningContainer) {
            this.GetC3000DeivceStatusAsync(runningContainer, null);
        }
        
        /// <remarks/>
        public void GetC3000DeivceStatusAsync(RunningContainer runningContainer, object userState) {
            if ((this.GetC3000DeivceStatusOperationCompleted == null)) {
                this.GetC3000DeivceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetC3000DeivceStatusOperationCompleted);
            }
            this.InvokeAsync("GetC3000DeivceStatus", new object[] {
                        runningContainer}, this.GetC3000DeivceStatusOperationCompleted, userState);
        }
        
        private void OnGetC3000DeivceStatusOperationCompleted(object arg) {
            if ((this.GetC3000DeivceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetC3000DeivceStatusCompleted(this, new GetC3000DeivceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/StartRunningHanelContainer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult StartRunningHanelContainer(RunningContainer runningContainer) {
            object[] results = this.Invoke("StartRunningHanelContainer", new object[] {
                        runningContainer});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartRunningHanelContainerAsync(RunningContainer runningContainer) {
            this.StartRunningHanelContainerAsync(runningContainer, null);
        }
        
        /// <remarks/>
        public void StartRunningHanelContainerAsync(RunningContainer runningContainer, object userState) {
            if ((this.StartRunningHanelContainerOperationCompleted == null)) {
                this.StartRunningHanelContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRunningHanelContainerOperationCompleted);
            }
            this.InvokeAsync("StartRunningHanelContainer", new object[] {
                        runningContainer}, this.StartRunningHanelContainerOperationCompleted, userState);
        }
        
        private void OnStartRunningHanelContainerOperationCompleted(object arg) {
            if ((this.StartRunningHanelContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRunningHanelContainerCompleted(this, new StartRunningHanelContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/GetHanelStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult GetHanelStatus(RunningContainer runningContainer) {
            object[] results = this.Invoke("GetHanelStatus", new object[] {
                        runningContainer});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetHanelStatusAsync(RunningContainer runningContainer) {
            this.GetHanelStatusAsync(runningContainer, null);
        }
        
        /// <remarks/>
        public void GetHanelStatusAsync(RunningContainer runningContainer, object userState) {
            if ((this.GetHanelStatusOperationCompleted == null)) {
                this.GetHanelStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHanelStatusOperationCompleted);
            }
            this.InvokeAsync("GetHanelStatus", new object[] {
                        runningContainer}, this.GetHanelStatusOperationCompleted, userState);
        }
        
        private void OnGetHanelStatusOperationCompleted(object arg) {
            if ((this.GetHanelStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHanelStatusCompleted(this, new GetHanelStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPlcServer/FinishHanellContainer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataResult FinishHanellContainer(RunningContainer runningContainer) {
            object[] results = this.Invoke("FinishHanellContainer", new object[] {
                        runningContainer});
            return ((DataResult)(results[0]));
        }
        
        /// <remarks/>
        public void FinishHanellContainerAsync(RunningContainer runningContainer) {
            this.FinishHanellContainerAsync(runningContainer, null);
        }
        
        /// <remarks/>
        public void FinishHanellContainerAsync(RunningContainer runningContainer, object userState) {
            if ((this.FinishHanellContainerOperationCompleted == null)) {
                this.FinishHanellContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishHanellContainerOperationCompleted);
            }
            this.InvokeAsync("FinishHanellContainer", new object[] {
                        runningContainer}, this.FinishHanellContainerOperationCompleted, userState);
        }
        
        private void OnFinishHanellContainerOperationCompleted(object arg) {
            if ((this.FinishHanellContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishHanellContainerCompleted(this, new FinishHanellContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RunningContainer {
        
        private string containerCodeField;
        
        private int trayCodeField;
        
        private int xLightField;
        
        private string ipAddressField;
        
        private int portField;
        
        /// <remarks/>
        public string ContainerCode {
            get {
                return this.containerCodeField;
            }
            set {
                this.containerCodeField = value;
            }
        }
        
        /// <remarks/>
        public int TrayCode {
            get {
                return this.trayCodeField;
            }
            set {
                this.trayCodeField = value;
            }
        }
        
        /// <remarks/>
        public int XLight {
            get {
                return this.xLightField;
            }
            set {
                this.xLightField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public int Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DataResultOfObject {
        
        private bool successField;
        
        private string messageField;
        
        private object dataField;
        
        private int resultTypeField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public object Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public int ResultType {
            get {
                return this.resultTypeField;
            }
            set {
                this.resultTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DataResult : DataResultOfObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void StartRunningContainerCompletedEventHandler(object sender, StartRunningContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRunningContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRunningContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HopperSettingCompletedEventHandler(object sender, HopperSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HopperSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HopperSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EmergencyDoorSettingCompletedEventHandler(object sender, EmergencyDoorSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmergencyDoorSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmergencyDoorSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPlcDeivceStatusCompletedEventHandler(object sender, GetPlcDeivceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlcDeivceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlcDeivceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAlarmInformationCompletedEventHandler(object sender, GetAlarmInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlarmInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlarmInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ResetAlarmCompletedEventHandler(object sender, ResetAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void StartRunningC3000ContainerCompletedEventHandler(object sender, StartRunningC3000ContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRunningC3000ContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRunningC3000ContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetC3000DeivceStatusCompletedEventHandler(object sender, GetC3000DeivceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetC3000DeivceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetC3000DeivceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void StartRunningHanelContainerCompletedEventHandler(object sender, StartRunningHanelContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRunningHanelContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRunningHanelContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetHanelStatusCompletedEventHandler(object sender, GetHanelStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHanelStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHanelStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FinishHanellContainerCompletedEventHandler(object sender, FinishHanellContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishHanellContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishHanellContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591